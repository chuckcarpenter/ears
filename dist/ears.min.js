/*! 
 @name          ears
 @description   An object event manager
 @version       0.1.0 - 2013/11/25
 @author        Cory Brown
 @copyright     Copyright 2013 by Intellectual Reserve, Inc.
 @usage

    # Create a new Ears object passing in the object to be managed
    earsObj = new Ears(managedObject)

    # Attach event handlers to events
    earsObj.on 'eventName', (e) ->
        //Do stuff

    # ears has an alternative syntax which changes the focus from events managed by the triggering object being managed by the listening object.
    earsObj.listenTo 'eventName', objToListenTo, (e) ->
        //Do stuff

    # Simply trigger events on objects
    earsObj.trigger 'test'

    # You can also pass data through the event object
    earsObj.trigger 'test', evtData

    # Data passed through the event object is accessed through the `data` property.
    earsSubscriber.listenTo 'eventName', earsPublisher, (evt) ->
        evt.data



 TODO: Support for namespaced events.
*/
(function(){var a;Array.isArray||(Array.isArray=function(a){return"[object Array]"===Object.prototype.toString.call(a)}),Array.prototype.indexOf||(Array.prototype.indexOf=function(a){var b,c,d,e;for(c=d=0,e=this.length;e>d;c=++d)if(b=this[c],a===b)return c}),a=function(){function a(a){this.obj=null!=a?a:{},this.__callbacks={}}return a.prototype.on=function(a,b){var c,d,e,f;for(f=a.split(" "),d=0,e=f.length;e>d;d++)c=f[d],Array.isArray(this.__callbacks[c])||(this.__callbacks[c]=[]),this.__callbacks[c].push(b);return this},a.prototype.off=function(a,b){var c,d,e,f;for(f=a.split(" "),d=0,e=f.length;e>d;d++)c=f[d],this.__callbacks[c].splice(this.__callbacks.indexOf(b),1);return this},a.prototype.listenTo=function(a,b,c){return b.on(a,c)},a.prototype.ignore=function(a,b,c){return b.off(a,c)},a.prototype.trigger=function(a,b){var c,d,e,f,g,h,i,j,k;for(j=a.split(" "),f=0,h=j.length;h>f;f++)for(c=j[f],d={type:c,data:b},k=this.__callbacks[c],g=0,i=k.length;i>g;g++)e=k[g],"function"==typeof e&&e(d);return this},a}()}).call(this);
//# sourceMappingURL=dist/ears.min.js.map